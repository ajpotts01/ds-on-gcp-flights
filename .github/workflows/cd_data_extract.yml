name: cd_data_extract

on:
  push:
    branches: [ main ]
    paths:
      - "data_extract/**"
  workflow_dispatch:  

# TODO: Consider workload identity federation
env:
  gcp_project: ${{ secrets.GCP_PROJECT }}
  gcp_sa_key: ${{ secrets.GCP_SA_KEY }}
  gcp_sa_name: ${{ secrets.GCP_SA_NAME }}
  gcp_gcr_name: ${{ secrets.GCP_GCR_NAME }}
  gcp_region: ${{ secrets.GCP_REGION }}
  gcp_ingestion_bucket: ${{ secrets.GCP_INGEST_BUCKET }}

jobs:
  cd:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Source code - checkout
        uses: actions/checkout@v3

      - name: Deployment - activate service account
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.gcp_sa_key }}

      - name: Deployment - Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"

      - name: Deployment - configure Docker
        run: |
          gcloud config set project ${{ env.gcp_project }}
          gcloud auth configure-docker
      
      - name: Deployment - submit to Cloud Build
        run: |
          cd data_extract/
          gcloud builds submit \
          --region=${{ env.gcp_region }} \
          -t gcr.io/${{ env.gcp_project }}/${{ env.gcp_gcr_name }} \
          --gcs-log-dir gs://${{ env.gcp_project }}-cloud-build-logs \
          --gcs-source-staging-dir gs://${{ env.gcp_project }}_cloudbuild/source \
          .
      
      - name: Deployment - submit to Cloud Run
        run: |
          gcloud run deploy \
          ${{ env.gcp_gcr_name }} \
          --image=gcr.io/${{ env.gcp_project }}/${{ env.gcp_gcr_name }} \
          --service-account=${{ env.gcp_sa_name }} \
          --region=${{ env.gcp_region }} \
          --no-allow-unauthenticated \
          --platform=managed --timeout 12m

      - name: Deployment - create scheduler
        run: |
          echo {\"bucket\":\"${{ env.gcp_ingestion_bucket }}\"\} > /tmp/message
          URL=$(gcloud run services describe ${{ env.gcp_gcr_name }} --format='value(status.url)' --region=${{ env.gcp_region }})
          SCHED=$(gcloud scheduler jobs describe ${{ env.gcp_gcr_name }} --location=australia-southeast1 || echo "NOT_FOUND")
          if [ "$SCHED" = "NOT_FOUND" ]; then
            ACTION="create"
            HEADER_COMMAND="--headers"
          else
            ACTION="update"
            HEADER_COMMAND="--update-headers"
          fi

          gcloud scheduler jobs $ACTION http ${{ env.gcp_gcr_name }} \
          --location=${{ env.gcp_region }} \
          --schedule="8 of month 10:00" \
          --time-zone "Australia/Sydney" \
          --description "Ingest flights using Cloud Run" \
          --uri=$URL \
          --http-method POST \
          --oidc-service-account-email ${{ env.gcp_sa_name }} \
          --oidc-token-audience=$(url) \
          --max-backoff=7d \
          --max-retry-attempts=5 \
          --max-retry-duration=2d \
          --min-backoff=12h \
          $HEADER_COMMAND="Content-Type=application/json" \
          --message-body-from-file=/tmp/message


